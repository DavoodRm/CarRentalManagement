@inject IJSRuntime js
@page "/models/"
@using System.Net

@attribute [Authorize]
@inject HttpClient _client
<h3 class="card-title">Car Models</h3>
<hr />
<br />

@if (Models == null)
{
    <div class="alert alert-info">loading ...</div>
}
else
{
    <table class="table table-responsive ">
        <thead>
        <tr>
            <th>Name</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var model in Models)
        {
            <tr>
                <td>@model.Name</td>
                <td>
                    <a href="/models/view/@model.Id" class="btn btn-primary">
                        <span class="oi oi-book"></span>
                    </a>
                    <a href="/models/edit/@model.Id" class="btn btn-warning">
                        <span class="oi oi-pencil"></span>
                    </a>
                    <button class="btn btn-danger" @onclick="@(()=>Delete(model.Id))">
                        <span class="oi oi-delete"></span>
                    </button>

                </td>
            </tr>

        }
        </tbody>
    </table>
}

@code {
    private List<Model> Models;
    protected override async Task OnInitializedAsync()
    {
        Models = await _client.GetFromJsonAsync<List<Model>>(Endpoints.ModelsEndpoint);
    }


    private async Task Delete(int id)
    {
        var make = Models.First(p => p.Id == id);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {make.Name}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.ModelsEndpoint}/{id}");
            Models.Remove(make);

        }
    }

}
